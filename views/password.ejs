<!DOCTYPE html>
<html lang="zh-CN" data-page="password-page">
<head>
  <%- include('partials/header') %>
  <title><%= title %></title>
  <meta name="format-detection" content="telephone=no">
  <meta name="format-detection" content="date=no">
  <meta name="format-detection" content="address=no">
  <meta name="format-detection" content="email=no">
  <!-- 禁用密码管理器 -->
  <meta name="robots" content="noai, noimageai">
  <meta name="apple-itunes-app" content="app-id=0,app-argument=none">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <style>
    /* 防止密码管理器识别 */
    .non-password {
      -webkit-text-security: none !important;
      -moz-text-security: none !important;
    }
    
    /* 防止iOS密码自动填充 */
    input[type="text"] {
      -webkit-user-select: text !important;
      user-select: text !important;
      -webkit-appearance: none;
      appearance: none;
    }
  </style>
</head>
<body>
  <div class="main-container">
    <header class="app-header">
      <div class="title-container">
        <h1 class="cyber-title">Share Claude LinK Online Free</h1>
        </div>
        <p class="app-description">Quickly share HTML, Markdown, SVG, Mermaid code generated from large models</p>
    </header>

    <div class="code-input-area">
      <!-- 这里是红框位置，放置密码输入模块 -->
      <div class="centered-password-container">
        <div class="card password-card centered-password-card">
          <h2 class="card-title"><i class="fas fa-lock" style="margin-right: 10px; color: var(--accent);"></i>此内容已加密</h2>
          <p class="password-description">请输入密码</p>
          
          <% if (error) { %>
            <div class="error-message"><%= error %></div>
          <% } %>
          
          <form action="/view/<%= id %>" method="get" class="password-form" id="passwordForm" onsubmit="return false;" autocomplete="off" data-lpignore="true" data-1p-ignore>
            <div class="password-input-container">
              <!-- u8702u5bc6u7f50u5b57u6bb5u6b3au9a97u5bc6u7801u7ba1u7406u5668 -->
              <input type="password" name="password" style="display:none" aria-hidden="true">
              <input type="text" name="pin_code" maxlength="5" class="password-input non-password" placeholder="*****" autocomplete="off" autofocus inputmode="numeric" pattern="[0-9]*" onkeypress="return event.charCode >= 48 && event.charCode <= 57" oninput="handlePasswordInput(this.value)" readonly onfocus="this.removeAttribute('readonly');" data-lpignore="true" data-form-type="other" data-1p-ignore spellcheck="false" autocorrect="off" autocapitalize="off">
              <div class="digit-indicators">
                <span class="digit-indicator"></span>
                <span class="digit-indicator"></span>
                <span class="digit-indicator"></span>
                <span class="digit-indicator"></span>
                <span class="digit-indicator"></span>
              </div>
            </div>

          </form>
        </div>
      </div>
    </div>

    <%- include('partials/footer') %>
  </div>

  <script src="/js/particles.js"></script>
  <script src="/js/theme.js"></script>
  <script>
    // 禁用iOS密码自动填充
    document.addEventListener('DOMContentLoaded', function() {
      // 延迟执行，确保页面完全加载
      setTimeout(function() {
        // 获取输入框元素
        const input = document.querySelector('.password-input');
        // 如果输入框存在，执行防止密码管理器的操作
        if (input) {
          // 先移除焦点
          input.blur();
          // 修改输入框类型，再改回来，扰乱密码管理器
          input.type = 'email';
          setTimeout(function() {
            input.type = 'text';
            // 重新聚焦
            input.focus();
          }, 100);
        }
      }, 300);
    });
    
    // Store the current page ID for validation
    const pageId = '<%= id %>';
    
    function handlePasswordInput(value) {
      const indicators = document.querySelectorAll('.digit-indicator');
      const passwordInput = document.querySelector('.password-input');
      const form = document.getElementById('passwordForm');
      
      // Reset all indicators and remove status classes
      indicators.forEach(indicator => {
        indicator.classList.remove('filled', 'correct', 'incorrect');
      });
      
      // Fill indicators based on password length (white color)
      for (let i = 0; i < value.length; i++) {
        if (i < indicators.length) {
          indicators[i].classList.add('filled');
        }
      }
      
      // If all 5 digits are entered, validate the password
      if (value.length === 5) {
        validatePassword(value);
      }
    }
    
    function validatePassword(password) {
      // Send AJAX request to validate password
      fetch(`/validate-password/${pageId}?password=${password}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json'
        }
      })
      .then(response => response.json())
      .then(data => {
        const indicators = document.querySelectorAll('.digit-indicator');
        const passwordInput = document.querySelector('.password-input');
        
        if (data.valid) {
          // Password is correct - show green indicators
          indicators.forEach(indicator => {
            indicator.classList.add('correct');
          });
          
          // Redirect to the content page after a short delay
          setTimeout(() => {
            window.location.href = `/view/${pageId}?password=${password}`;
          }, 500);
        } else {
          // Password is incorrect - show red indicators
          indicators.forEach(indicator => {
            indicator.classList.add('incorrect');
          });
          
          // Clear the input after a short delay
          setTimeout(() => {
            passwordInput.value = '';
            indicators.forEach(indicator => {
              indicator.classList.remove('filled', 'correct', 'incorrect');
            });
          }, 1000);
        }
      })
      .catch(error => {
        console.error('Error validating password:', error);
      });
    }
  </script>
</body>
</html>
